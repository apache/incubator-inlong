#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "inlong.fullname" . }}-{{ .Values.tubemqManager.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "inlong.commonLabels" . | nindent 4 }}
    component: {{ .Values.tubemqManager.component }}
spec:
  serviceName: {{ template "inlong.fullname" . }}-{{ .Values.tubemqManager.component }}
  replicas: {{ .Values.tubemqManager.replicaCount }}
  selector:
    matchLabels:
      {{- include "inlong.matchLabels" . | nindent 6 }}
      component: {{ .Values.tubemqManager.component }}
  template:
    metadata:
      labels:
        {{- include "inlong.template.labels" . | nindent 8 }}
        component: {{ .Values.tubemqManager.component }}
    spec:
      initContainers:
        - name: wait-mysql-ready
          image: {{ .Values.images.initContainer.repository }}:{{ .Values.images.initContainer.tag }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            - >-
              for ((i=0;i<{{ .Values.mysql.replicaCount }};i++))
              do
                host="{{ template "inlong.fullname" $ }}-{{ .Values.mysql.component }}-$i.{{ template "inlong.fullname" $ }}-{{ .Values.mysql.component }}.{{ .Release.Namespace }}.svc.cluster.local"
                port={{ .Values.mysql.ports.server }}
                until [ $(nc -z -w 5 $host $port; echo $?) -eq 0]
                do
                  echo "waiting for {{ template "inlong.fullname" $ }}-{{ .Values.mysql.component }}-$i to be ready"
                  sleep 3
                done
              done
        - name: wait-tubemq-master
          image: {{ .Values.images.initContainer.repository }}:{{ .Values.images.initContainer.tag }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            - >-
              for ((i=0;i<{{ .Values.tubemqMaster.replicaCount }};i++))
              do
                host="{{ template "inlong.fullname" $ }}-{{ .Values.tubemqMaster.component }}-$i.{{ template "inlong.fullname" $ }}-{{ .Values.tubemqMaster.component }}.{{ .Release.Namespace }}.svc.cluster.local"
                port={{ .Values.tubemqMaster.ports.rpcPort }}
                until [ $(nc -z -w 5 $host $port; echo $?) -eq 0]
                do
                  echo "waiting for {{ template "inlong.fullname" $ }}-{{ .Values.tubemqMaster.component }}-$i to be ready"
                  sleep 3
                done
              done
      containers:
        - name: {{ template "inlong.name" . }}-{{ .Values.tubemqManager.component }}
          image: {{ .Values.images.tubemqManager.repository }}:{{ .Values.images.tubemqManager.tag }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            - name: MYSQL_HOST
              value: {{ template "inlong.mysql.hostname" }}
            - name: MYSQL_USER
              value: {{ .Values.tubemqManager.mysqlUser | quote }}
            - name: MYSQL_PASSWD
              valueFrom:
                secretKeyRef:
                  name: {{ template "inlong.fullname" . }}-{{ .Values.mysql.component }}
                  key: mysql-root-password
            - name: TUBE_MASTER_IP
              value: {{ include "inlong.tubemqMaster.hostname" . | quote}}
          ports:
            - name: {{ .Values.tubemqManager.component }}-port
              containerPort: 8089
      restartPolicy: Always
