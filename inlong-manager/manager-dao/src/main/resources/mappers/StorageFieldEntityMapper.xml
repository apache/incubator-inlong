<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.inlong.manager.dao.mapper.StorageFieldEntityMapper">
    <resultMap id="BaseResultMap" type="org.apache.inlong.manager.dao.entity.StorageFieldEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="inlong_group_id" jdbcType="VARCHAR" property="inlongGroupId"/>
        <result column="inlong_stream_id" jdbcType="VARCHAR" property="inlongStreamId"/>
        <result column="storage_id" jdbcType="INTEGER" property="storageId"/>
        <result column="storage_type" jdbcType="VARCHAR" property="storageType"/>
        <result column="field_name" jdbcType="VARCHAR" property="fieldName"/>
        <result column="field_type" jdbcType="VARCHAR" property="fieldType"/>
        <result column="field_comment" jdbcType="VARCHAR" property="fieldComment"/>
        <result column="source_field_name" jdbcType="VARCHAR" property="sourceFieldName"/>
        <result column="source_field_type" jdbcType="VARCHAR" property="sourceFieldType"/>
        <result column="rank_num" jdbcType="SMALLINT" property="rankNum"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, storage_id, field_name, field_type, field_comment,
        source_field_name, source_field_type, rank_num, is_deleted
    </sql>

    <insert id="insert" parameterType="org.apache.inlong.manager.dao.entity.StorageFieldEntity">
        insert into data_storage_field (id, inlong_group_id, inlong_stream_id,
                                        storage_id, storage_type,
                                        field_name, field_type, field_comment,
                                        source_field_name, source_field_type,
                                        rank_num, is_deleted)
        values (#{id,jdbcType=INTEGER}, #{inlongGroupId,jdbcType=VARCHAR}, #{inlongStreamId,jdbcType=VARCHAR},
                #{storageId,jdbcType=INTEGER}, #{storageType,jdbcType=VARCHAR},
                #{fieldName,jdbcType=VARCHAR}, #{fieldType,jdbcType=VARCHAR}, #{fieldComment,jdbcType=VARCHAR},
                #{sourceFieldName,jdbcType=VARCHAR}, #{sourceFieldType,jdbcType=VARCHAR},
                #{rankNum,jdbcType=SMALLINT}, #{isDeleted,jdbcType=INTEGER})
    </insert>
    <insert id="insertAll">
        insert into data_storage_field (
        id, inlong_group_id,
        inlong_stream_id, storage_id,
        storage_type, field_name,
        field_type, field_comment,
        source_field_name, source_field_type,
        rank_num, is_deleted
        )
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id,jdbcType=INTEGER}, #{item.inlongGroupId,jdbcType=VARCHAR},
            #{item.inlongStreamId,jdbcType=VARCHAR}, #{item.storageId,jdbcType=INTEGER},
            #{item.storageType,jdbcType=VARCHAR}, #{item.fieldName,jdbcType=VARCHAR},
            #{item.fieldType,jdbcType=VARCHAR}, #{item.fieldComment,jdbcType=VARCHAR},
            #{item.sourceFieldName,jdbcType=VARCHAR}, #{item.sourceFieldType,jdbcType=VARCHAR},
            #{item.rankNum,jdbcType=SMALLINT}, #{item.isDeleted,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_storage_field
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByStorageId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_storage_field
        where storage_id = #{storageId, jdbcType=INTEGER}
        and is_deleted = 0
        order by rank_num asc
    </select>
    <select id="selectFields" resultMap="BaseResultMap">
        select field.*
        from data_storage_field field,
             data_storage storage
        where storage.inlong_inlong_group_id = #{inlongGroupId, jdbcType=VARCHAR}
          and storage.inlong_inlong_stream_id = #{inlongStreamId, jdbcType=VARCHAR}
          and field.storage_id = storage.id
          and field.is_deleted = 0
          and storage.is_deleted = 0
    </select>

    <update id="logicDeleteAll">
        update data_storage_field
        set is_deleted = id
        where storage_id = #{storageId, jdbcType=INTEGER}
          and is_deleted = 0
    </update>

    <delete id="deleteAll">
        delete
        from data_storage_field
        where storage_id = #{storageId,jdbcType=INTEGER}
    </delete>
</mapper>