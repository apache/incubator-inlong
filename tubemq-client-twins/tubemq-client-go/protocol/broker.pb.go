/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: broker.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransferedMessage struct {
	MessageId            int64    `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	CheckSum             int32    `protobuf:"varint,2,opt,name=checkSum,proto3" json:"checkSum,omitempty"`
	PayLoadData          []byte   `protobuf:"bytes,3,opt,name=payLoadData,proto3" json:"payLoadData,omitempty"`
	Flag                 int32    `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferedMessage) Reset()         { *m = TransferedMessage{} }
func (m *TransferedMessage) String() string { return proto.CompactTextString(m) }
func (*TransferedMessage) ProtoMessage()    {}
func (*TransferedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{0}
}

func (m *TransferedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferedMessage.Unmarshal(m, b)
}
func (m *TransferedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferedMessage.Marshal(b, m, deterministic)
}
func (m *TransferedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferedMessage.Merge(m, src)
}
func (m *TransferedMessage) XXX_Size() int {
	return xxx_messageInfo_TransferedMessage.Size(m)
}
func (m *TransferedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TransferedMessage proto.InternalMessageInfo

func (m *TransferedMessage) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *TransferedMessage) GetCheckSum() int32 {
	if m != nil {
		return m.CheckSum
	}
	return 0
}

func (m *TransferedMessage) GetPayLoadData() []byte {
	if m != nil {
		return m.PayLoadData
	}
	return nil
}

func (m *TransferedMessage) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

type AuthorizedInfo struct {
	VisitAuthorizedToken int64    `protobuf:"varint,1,opt,name=visitAuthorizedToken,proto3" json:"visitAuthorizedToken,omitempty"`
	AuthAuthorizedToken  string   `protobuf:"bytes,2,opt,name=authAuthorizedToken,proto3" json:"authAuthorizedToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizedInfo) Reset()         { *m = AuthorizedInfo{} }
func (m *AuthorizedInfo) String() string { return proto.CompactTextString(m) }
func (*AuthorizedInfo) ProtoMessage()    {}
func (*AuthorizedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{1}
}

func (m *AuthorizedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizedInfo.Unmarshal(m, b)
}
func (m *AuthorizedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizedInfo.Marshal(b, m, deterministic)
}
func (m *AuthorizedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizedInfo.Merge(m, src)
}
func (m *AuthorizedInfo) XXX_Size() int {
	return xxx_messageInfo_AuthorizedInfo.Size(m)
}
func (m *AuthorizedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizedInfo proto.InternalMessageInfo

func (m *AuthorizedInfo) GetVisitAuthorizedToken() int64 {
	if m != nil {
		return m.VisitAuthorizedToken
	}
	return 0
}

func (m *AuthorizedInfo) GetAuthAuthorizedToken() string {
	if m != nil {
		return m.AuthAuthorizedToken
	}
	return ""
}

type SendMessageRequestP2B struct {
	ClientId             string          `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	TopicName            string          `protobuf:"bytes,2,opt,name=topicName,proto3" json:"topicName,omitempty"`
	PartitionId          int32           `protobuf:"varint,3,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	Data                 []byte          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Flag                 int32           `protobuf:"varint,5,opt,name=flag,proto3" json:"flag,omitempty"`
	CheckSum             int32           `protobuf:"varint,6,opt,name=checkSum,proto3" json:"checkSum,omitempty"`
	SentAddr             int32           `protobuf:"varint,7,opt,name=sentAddr,proto3" json:"sentAddr,omitempty"`
	MsgType              string          `protobuf:"bytes,8,opt,name=msgType,proto3" json:"msgType,omitempty"`
	MsgTime              string          `protobuf:"bytes,9,opt,name=msgTime,proto3" json:"msgTime,omitempty"`
	AuthInfo             *AuthorizedInfo `protobuf:"bytes,10,opt,name=authInfo,proto3" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SendMessageRequestP2B) Reset()         { *m = SendMessageRequestP2B{} }
func (m *SendMessageRequestP2B) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequestP2B) ProtoMessage()    {}
func (*SendMessageRequestP2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{2}
}

func (m *SendMessageRequestP2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequestP2B.Unmarshal(m, b)
}
func (m *SendMessageRequestP2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequestP2B.Marshal(b, m, deterministic)
}
func (m *SendMessageRequestP2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequestP2B.Merge(m, src)
}
func (m *SendMessageRequestP2B) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequestP2B.Size(m)
}
func (m *SendMessageRequestP2B) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequestP2B.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequestP2B proto.InternalMessageInfo

func (m *SendMessageRequestP2B) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *SendMessageRequestP2B) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *SendMessageRequestP2B) GetPartitionId() int32 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *SendMessageRequestP2B) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SendMessageRequestP2B) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *SendMessageRequestP2B) GetCheckSum() int32 {
	if m != nil {
		return m.CheckSum
	}
	return 0
}

func (m *SendMessageRequestP2B) GetSentAddr() int32 {
	if m != nil {
		return m.SentAddr
	}
	return 0
}

func (m *SendMessageRequestP2B) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SendMessageRequestP2B) GetMsgTime() string {
	if m != nil {
		return m.MsgTime
	}
	return ""
}

func (m *SendMessageRequestP2B) GetAuthInfo() *AuthorizedInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type SendMessageResponseB2P struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrCode              int32    `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	RequireAuth          bool     `protobuf:"varint,4,opt,name=requireAuth,proto3" json:"requireAuth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponseB2P) Reset()         { *m = SendMessageResponseB2P{} }
func (m *SendMessageResponseB2P) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponseB2P) ProtoMessage()    {}
func (*SendMessageResponseB2P) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{3}
}

func (m *SendMessageResponseB2P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponseB2P.Unmarshal(m, b)
}
func (m *SendMessageResponseB2P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponseB2P.Marshal(b, m, deterministic)
}
func (m *SendMessageResponseB2P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponseB2P.Merge(m, src)
}
func (m *SendMessageResponseB2P) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponseB2P.Size(m)
}
func (m *SendMessageResponseB2P) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponseB2P.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponseB2P proto.InternalMessageInfo

func (m *SendMessageResponseB2P) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendMessageResponseB2P) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *SendMessageResponseB2P) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SendMessageResponseB2P) GetRequireAuth() bool {
	if m != nil {
		return m.RequireAuth
	}
	return false
}

type RegisterRequestC2B struct {
	OpType               int32           `protobuf:"varint,1,opt,name=opType,proto3" json:"opType,omitempty"`
	ClientId             string          `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	GroupName            string          `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	TopicName            string          `protobuf:"bytes,4,opt,name=topicName,proto3" json:"topicName,omitempty"`
	PartitionId          int32           `protobuf:"varint,5,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	ReadStatus           int32           `protobuf:"varint,6,opt,name=readStatus,proto3" json:"readStatus,omitempty"`
	FilterCondStr        []string        `protobuf:"bytes,7,rep,name=filterCondStr,proto3" json:"filterCondStr,omitempty"`
	CurrOffset           int64           `protobuf:"varint,8,opt,name=currOffset,proto3" json:"currOffset,omitempty"`
	SessionKey           string          `protobuf:"bytes,9,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	SessionTime          int64           `protobuf:"varint,10,opt,name=sessionTime,proto3" json:"sessionTime,omitempty"`
	SsdStoreId           int64           `protobuf:"varint,11,opt,name=ssdStoreId,proto3" json:"ssdStoreId,omitempty"`
	QryPriorityId        int32           `protobuf:"varint,12,opt,name=qryPriorityId,proto3" json:"qryPriorityId,omitempty"`
	AuthInfo             *AuthorizedInfo `protobuf:"bytes,13,opt,name=authInfo,proto3" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RegisterRequestC2B) Reset()         { *m = RegisterRequestC2B{} }
func (m *RegisterRequestC2B) String() string { return proto.CompactTextString(m) }
func (*RegisterRequestC2B) ProtoMessage()    {}
func (*RegisterRequestC2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{4}
}

func (m *RegisterRequestC2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequestC2B.Unmarshal(m, b)
}
func (m *RegisterRequestC2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequestC2B.Marshal(b, m, deterministic)
}
func (m *RegisterRequestC2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequestC2B.Merge(m, src)
}
func (m *RegisterRequestC2B) XXX_Size() int {
	return xxx_messageInfo_RegisterRequestC2B.Size(m)
}
func (m *RegisterRequestC2B) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequestC2B.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequestC2B proto.InternalMessageInfo

func (m *RegisterRequestC2B) GetOpType() int32 {
	if m != nil {
		return m.OpType
	}
	return 0
}

func (m *RegisterRequestC2B) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RegisterRequestC2B) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *RegisterRequestC2B) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *RegisterRequestC2B) GetPartitionId() int32 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *RegisterRequestC2B) GetReadStatus() int32 {
	if m != nil {
		return m.ReadStatus
	}
	return 0
}

func (m *RegisterRequestC2B) GetFilterCondStr() []string {
	if m != nil {
		return m.FilterCondStr
	}
	return nil
}

func (m *RegisterRequestC2B) GetCurrOffset() int64 {
	if m != nil {
		return m.CurrOffset
	}
	return 0
}

func (m *RegisterRequestC2B) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

func (m *RegisterRequestC2B) GetSessionTime() int64 {
	if m != nil {
		return m.SessionTime
	}
	return 0
}

func (m *RegisterRequestC2B) GetSsdStoreId() int64 {
	if m != nil {
		return m.SsdStoreId
	}
	return 0
}

func (m *RegisterRequestC2B) GetQryPriorityId() int32 {
	if m != nil {
		return m.QryPriorityId
	}
	return 0
}

func (m *RegisterRequestC2B) GetAuthInfo() *AuthorizedInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type RegisterResponseB2C struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrCode              int32    `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	CurrOffset           int64    `protobuf:"varint,4,opt,name=currOffset,proto3" json:"currOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponseB2C) Reset()         { *m = RegisterResponseB2C{} }
func (m *RegisterResponseB2C) String() string { return proto.CompactTextString(m) }
func (*RegisterResponseB2C) ProtoMessage()    {}
func (*RegisterResponseB2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{5}
}

func (m *RegisterResponseB2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponseB2C.Unmarshal(m, b)
}
func (m *RegisterResponseB2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponseB2C.Marshal(b, m, deterministic)
}
func (m *RegisterResponseB2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponseB2C.Merge(m, src)
}
func (m *RegisterResponseB2C) XXX_Size() int {
	return xxx_messageInfo_RegisterResponseB2C.Size(m)
}
func (m *RegisterResponseB2C) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponseB2C.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponseB2C proto.InternalMessageInfo

func (m *RegisterResponseB2C) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterResponseB2C) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *RegisterResponseB2C) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RegisterResponseB2C) GetCurrOffset() int64 {
	if m != nil {
		return m.CurrOffset
	}
	return 0
}

type HeartBeatRequestC2B struct {
	ClientId   string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	GroupName  string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ReadStatus int32  `protobuf:"varint,3,opt,name=readStatus,proto3" json:"readStatus,omitempty"`
	// brokerId:host:port:topic:partitionId:delayTimeStamp
	PartitionInfo        []string        `protobuf:"bytes,4,rep,name=partitionInfo,proto3" json:"partitionInfo,omitempty"`
	SsdStoreId           int64           `protobuf:"varint,5,opt,name=ssdStoreId,proto3" json:"ssdStoreId,omitempty"`
	QryPriorityId        int32           `protobuf:"varint,6,opt,name=qryPriorityId,proto3" json:"qryPriorityId,omitempty"`
	AuthInfo             *AuthorizedInfo `protobuf:"bytes,7,opt,name=authInfo,proto3" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HeartBeatRequestC2B) Reset()         { *m = HeartBeatRequestC2B{} }
func (m *HeartBeatRequestC2B) String() string { return proto.CompactTextString(m) }
func (*HeartBeatRequestC2B) ProtoMessage()    {}
func (*HeartBeatRequestC2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{6}
}

func (m *HeartBeatRequestC2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatRequestC2B.Unmarshal(m, b)
}
func (m *HeartBeatRequestC2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatRequestC2B.Marshal(b, m, deterministic)
}
func (m *HeartBeatRequestC2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatRequestC2B.Merge(m, src)
}
func (m *HeartBeatRequestC2B) XXX_Size() int {
	return xxx_messageInfo_HeartBeatRequestC2B.Size(m)
}
func (m *HeartBeatRequestC2B) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatRequestC2B.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatRequestC2B proto.InternalMessageInfo

func (m *HeartBeatRequestC2B) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *HeartBeatRequestC2B) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *HeartBeatRequestC2B) GetReadStatus() int32 {
	if m != nil {
		return m.ReadStatus
	}
	return 0
}

func (m *HeartBeatRequestC2B) GetPartitionInfo() []string {
	if m != nil {
		return m.PartitionInfo
	}
	return nil
}

func (m *HeartBeatRequestC2B) GetSsdStoreId() int64 {
	if m != nil {
		return m.SsdStoreId
	}
	return 0
}

func (m *HeartBeatRequestC2B) GetQryPriorityId() int32 {
	if m != nil {
		return m.QryPriorityId
	}
	return 0
}

func (m *HeartBeatRequestC2B) GetAuthInfo() *AuthorizedInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type HeartBeatResponseB2C struct {
	Success        bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrCode        int32  `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg         string `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	HasPartFailure bool   `protobuf:"varint,4,opt,name=hasPartFailure,proto3" json:"hasPartFailure,omitempty"`
	// failCode:brokerId:host:port:topic:partitionId:delayTimeStamp
	FailureInfo          []string `protobuf:"bytes,5,rep,name=failureInfo,proto3" json:"failureInfo,omitempty"`
	RequireAuth          bool     `protobuf:"varint,6,opt,name=requireAuth,proto3" json:"requireAuth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartBeatResponseB2C) Reset()         { *m = HeartBeatResponseB2C{} }
func (m *HeartBeatResponseB2C) String() string { return proto.CompactTextString(m) }
func (*HeartBeatResponseB2C) ProtoMessage()    {}
func (*HeartBeatResponseB2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{7}
}

func (m *HeartBeatResponseB2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatResponseB2C.Unmarshal(m, b)
}
func (m *HeartBeatResponseB2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatResponseB2C.Marshal(b, m, deterministic)
}
func (m *HeartBeatResponseB2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatResponseB2C.Merge(m, src)
}
func (m *HeartBeatResponseB2C) XXX_Size() int {
	return xxx_messageInfo_HeartBeatResponseB2C.Size(m)
}
func (m *HeartBeatResponseB2C) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatResponseB2C.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatResponseB2C proto.InternalMessageInfo

func (m *HeartBeatResponseB2C) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *HeartBeatResponseB2C) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *HeartBeatResponseB2C) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *HeartBeatResponseB2C) GetHasPartFailure() bool {
	if m != nil {
		return m.HasPartFailure
	}
	return false
}

func (m *HeartBeatResponseB2C) GetFailureInfo() []string {
	if m != nil {
		return m.FailureInfo
	}
	return nil
}

func (m *HeartBeatResponseB2C) GetRequireAuth() bool {
	if m != nil {
		return m.RequireAuth
	}
	return false
}

type GetMessageRequestC2B struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	PartitionId          int32    `protobuf:"varint,2,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	GroupName            string   `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	TopicName            string   `protobuf:"bytes,4,opt,name=topicName,proto3" json:"topicName,omitempty"`
	LastPackConsumed     bool     `protobuf:"varint,5,opt,name=lastPackConsumed,proto3" json:"lastPackConsumed,omitempty"`
	ManualCommitOffset   bool     `protobuf:"varint,6,opt,name=manualCommitOffset,proto3" json:"manualCommitOffset,omitempty"`
	EscFlowCtrl          bool     `protobuf:"varint,7,opt,name=escFlowCtrl,proto3" json:"escFlowCtrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessageRequestC2B) Reset()         { *m = GetMessageRequestC2B{} }
func (m *GetMessageRequestC2B) String() string { return proto.CompactTextString(m) }
func (*GetMessageRequestC2B) ProtoMessage()    {}
func (*GetMessageRequestC2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{8}
}

func (m *GetMessageRequestC2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessageRequestC2B.Unmarshal(m, b)
}
func (m *GetMessageRequestC2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessageRequestC2B.Marshal(b, m, deterministic)
}
func (m *GetMessageRequestC2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessageRequestC2B.Merge(m, src)
}
func (m *GetMessageRequestC2B) XXX_Size() int {
	return xxx_messageInfo_GetMessageRequestC2B.Size(m)
}
func (m *GetMessageRequestC2B) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessageRequestC2B.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessageRequestC2B proto.InternalMessageInfo

func (m *GetMessageRequestC2B) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *GetMessageRequestC2B) GetPartitionId() int32 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *GetMessageRequestC2B) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GetMessageRequestC2B) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *GetMessageRequestC2B) GetLastPackConsumed() bool {
	if m != nil {
		return m.LastPackConsumed
	}
	return false
}

func (m *GetMessageRequestC2B) GetManualCommitOffset() bool {
	if m != nil {
		return m.ManualCommitOffset
	}
	return false
}

func (m *GetMessageRequestC2B) GetEscFlowCtrl() bool {
	if m != nil {
		return m.EscFlowCtrl
	}
	return false
}

type GetMessageResponseB2C struct {
	Success              bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrCode              int32                `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg               string               `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Messages             []*TransferedMessage `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	CurrOffset           int64                `protobuf:"varint,5,opt,name=currOffset,proto3" json:"currOffset,omitempty"`
	MinLimitTime         int32                `protobuf:"varint,6,opt,name=minLimitTime,proto3" json:"minLimitTime,omitempty"`
	EscFlowCtrl          bool                 `protobuf:"varint,7,opt,name=escFlowCtrl,proto3" json:"escFlowCtrl,omitempty"`
	CurrDataDlt          int64                `protobuf:"varint,8,opt,name=currDataDlt,proto3" json:"currDataDlt,omitempty"`
	RequireSlow          bool                 `protobuf:"varint,9,opt,name=requireSlow,proto3" json:"requireSlow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetMessageResponseB2C) Reset()         { *m = GetMessageResponseB2C{} }
func (m *GetMessageResponseB2C) String() string { return proto.CompactTextString(m) }
func (*GetMessageResponseB2C) ProtoMessage()    {}
func (*GetMessageResponseB2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{9}
}

func (m *GetMessageResponseB2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessageResponseB2C.Unmarshal(m, b)
}
func (m *GetMessageResponseB2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessageResponseB2C.Marshal(b, m, deterministic)
}
func (m *GetMessageResponseB2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessageResponseB2C.Merge(m, src)
}
func (m *GetMessageResponseB2C) XXX_Size() int {
	return xxx_messageInfo_GetMessageResponseB2C.Size(m)
}
func (m *GetMessageResponseB2C) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessageResponseB2C.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessageResponseB2C proto.InternalMessageInfo

func (m *GetMessageResponseB2C) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetMessageResponseB2C) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetMessageResponseB2C) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetMessageResponseB2C) GetMessages() []*TransferedMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *GetMessageResponseB2C) GetCurrOffset() int64 {
	if m != nil {
		return m.CurrOffset
	}
	return 0
}

func (m *GetMessageResponseB2C) GetMinLimitTime() int32 {
	if m != nil {
		return m.MinLimitTime
	}
	return 0
}

func (m *GetMessageResponseB2C) GetEscFlowCtrl() bool {
	if m != nil {
		return m.EscFlowCtrl
	}
	return false
}

func (m *GetMessageResponseB2C) GetCurrDataDlt() int64 {
	if m != nil {
		return m.CurrDataDlt
	}
	return 0
}

func (m *GetMessageResponseB2C) GetRequireSlow() bool {
	if m != nil {
		return m.RequireSlow
	}
	return false
}

type CommitOffsetRequestC2B struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	TopicName            string   `protobuf:"bytes,2,opt,name=topicName,proto3" json:"topicName,omitempty"`
	PartitionId          int32    `protobuf:"varint,3,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	GroupName            string   `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	LastPackConsumed     bool     `protobuf:"varint,5,opt,name=lastPackConsumed,proto3" json:"lastPackConsumed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitOffsetRequestC2B) Reset()         { *m = CommitOffsetRequestC2B{} }
func (m *CommitOffsetRequestC2B) String() string { return proto.CompactTextString(m) }
func (*CommitOffsetRequestC2B) ProtoMessage()    {}
func (*CommitOffsetRequestC2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{10}
}

func (m *CommitOffsetRequestC2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitOffsetRequestC2B.Unmarshal(m, b)
}
func (m *CommitOffsetRequestC2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitOffsetRequestC2B.Marshal(b, m, deterministic)
}
func (m *CommitOffsetRequestC2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitOffsetRequestC2B.Merge(m, src)
}
func (m *CommitOffsetRequestC2B) XXX_Size() int {
	return xxx_messageInfo_CommitOffsetRequestC2B.Size(m)
}
func (m *CommitOffsetRequestC2B) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitOffsetRequestC2B.DiscardUnknown(m)
}

var xxx_messageInfo_CommitOffsetRequestC2B proto.InternalMessageInfo

func (m *CommitOffsetRequestC2B) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CommitOffsetRequestC2B) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *CommitOffsetRequestC2B) GetPartitionId() int32 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *CommitOffsetRequestC2B) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *CommitOffsetRequestC2B) GetLastPackConsumed() bool {
	if m != nil {
		return m.LastPackConsumed
	}
	return false
}

type CommitOffsetResponseB2C struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrCode              int32    `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	CurrOffset           int64    `protobuf:"varint,4,opt,name=currOffset,proto3" json:"currOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitOffsetResponseB2C) Reset()         { *m = CommitOffsetResponseB2C{} }
func (m *CommitOffsetResponseB2C) String() string { return proto.CompactTextString(m) }
func (*CommitOffsetResponseB2C) ProtoMessage()    {}
func (*CommitOffsetResponseB2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_f209535e190f2bed, []int{11}
}

func (m *CommitOffsetResponseB2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitOffsetResponseB2C.Unmarshal(m, b)
}
func (m *CommitOffsetResponseB2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitOffsetResponseB2C.Marshal(b, m, deterministic)
}
func (m *CommitOffsetResponseB2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitOffsetResponseB2C.Merge(m, src)
}
func (m *CommitOffsetResponseB2C) XXX_Size() int {
	return xxx_messageInfo_CommitOffsetResponseB2C.Size(m)
}
func (m *CommitOffsetResponseB2C) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitOffsetResponseB2C.DiscardUnknown(m)
}

var xxx_messageInfo_CommitOffsetResponseB2C proto.InternalMessageInfo

func (m *CommitOffsetResponseB2C) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CommitOffsetResponseB2C) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CommitOffsetResponseB2C) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CommitOffsetResponseB2C) GetCurrOffset() int64 {
	if m != nil {
		return m.CurrOffset
	}
	return 0
}

func init() {
	proto.RegisterType((*TransferedMessage)(nil), "protocol.TransferedMessage")
	proto.RegisterType((*AuthorizedInfo)(nil), "protocol.AuthorizedInfo")
	proto.RegisterType((*SendMessageRequestP2B)(nil), "protocol.SendMessageRequestP2B")
	proto.RegisterType((*SendMessageResponseB2P)(nil), "protocol.SendMessageResponseB2P")
	proto.RegisterType((*RegisterRequestC2B)(nil), "protocol.RegisterRequestC2B")
	proto.RegisterType((*RegisterResponseB2C)(nil), "protocol.RegisterResponseB2C")
	proto.RegisterType((*HeartBeatRequestC2B)(nil), "protocol.HeartBeatRequestC2B")
	proto.RegisterType((*HeartBeatResponseB2C)(nil), "protocol.HeartBeatResponseB2C")
	proto.RegisterType((*GetMessageRequestC2B)(nil), "protocol.GetMessageRequestC2B")
	proto.RegisterType((*GetMessageResponseB2C)(nil), "protocol.GetMessageResponseB2C")
	proto.RegisterType((*CommitOffsetRequestC2B)(nil), "protocol.CommitOffsetRequestC2B")
	proto.RegisterType((*CommitOffsetResponseB2C)(nil), "protocol.CommitOffsetResponseB2C")
}

func init() { proto.RegisterFile("broker.proto", fileDescriptor_f209535e190f2bed) }

var fileDescriptor_f209535e190f2bed = []byte{
	// 898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcf, 0x8f, 0xdb, 0x44,
	0x14, 0x96, 0x9d, 0x1f, 0xeb, 0xbc, 0xdd, 0x56, 0xe0, 0xdd, 0x2e, 0x56, 0x41, 0x28, 0xb2, 0x10,
	0x8a, 0x90, 0x9a, 0xad, 0x02, 0x12, 0xe7, 0x26, 0x55, 0x61, 0x45, 0x0b, 0xd1, 0x64, 0x4f, 0xdc,
	0x66, 0xed, 0x17, 0xef, 0x28, 0xb6, 0x27, 0x99, 0x19, 0xb7, 0x0a, 0x37, 0x84, 0xe0, 0x88, 0xc4,
	0x1f, 0x04, 0x47, 0x0e, 0x1c, 0xf8, 0x9b, 0xd0, 0x8c, 0xed, 0xf8, 0x47, 0x22, 0x65, 0x51, 0xa9,
	0x38, 0x65, 0xde, 0xf7, 0x9c, 0x99, 0xf7, 0xbe, 0xef, 0x9b, 0xa7, 0x81, 0xb3, 0x5b, 0xc1, 0x57,
	0x28, 0xc6, 0x6b, 0xc1, 0x15, 0x77, 0x1d, 0xf3, 0x13, 0xf0, 0xd8, 0xff, 0xc9, 0x82, 0xf7, 0x6f,
	0x04, 0x4d, 0xe5, 0x12, 0x05, 0x86, 0xaf, 0x50, 0x4a, 0x1a, 0xa1, 0xfb, 0x11, 0x0c, 0x92, 0x7c,
	0x79, 0x1d, 0x7a, 0xd6, 0xd0, 0x1a, 0x75, 0x48, 0x05, 0xb8, 0x8f, 0xc1, 0x09, 0xee, 0x30, 0x58,
	0x2d, 0xb2, 0xc4, 0xb3, 0x87, 0xd6, 0xa8, 0x47, 0x76, 0xb1, 0x3b, 0x84, 0xd3, 0x35, 0xdd, 0xbe,
	0xe4, 0x34, 0x7c, 0x4e, 0x15, 0xf5, 0x3a, 0x43, 0x6b, 0x74, 0x46, 0xea, 0x90, 0xeb, 0x42, 0x77,
	0x19, 0xd3, 0xc8, 0xeb, 0x9a, 0x7f, 0x9a, 0xb5, 0xff, 0x1a, 0x1e, 0x3e, 0xcb, 0xd4, 0x1d, 0x17,
	0xec, 0x07, 0x0c, 0xaf, 0xd3, 0x25, 0x77, 0x27, 0x70, 0xf1, 0x9a, 0x49, 0xa6, 0x2a, 0xf8, 0x86,
	0xaf, 0x30, 0x2d, 0x8a, 0x39, 0x98, 0x73, 0x9f, 0xc2, 0x39, 0xcd, 0xd4, 0x5d, 0xfb, 0x2f, 0xba,
	0xc4, 0x01, 0x39, 0x94, 0xf2, 0x7f, 0xb7, 0xe1, 0xd1, 0x02, 0xd3, 0xb2, 0x6f, 0x82, 0x9b, 0x0c,
	0xa5, 0x9a, 0x4f, 0xa6, 0xa6, 0xc7, 0x98, 0x61, 0xaa, 0x0a, 0x02, 0x06, 0x64, 0x17, 0x6b, 0x76,
	0x14, 0x5f, 0xb3, 0xe0, 0x5b, 0x9a, 0x60, 0xb1, 0x7b, 0x05, 0xe4, 0x0c, 0x08, 0xc5, 0x14, 0xe3,
	0xe9, 0x75, 0x68, 0x18, 0xe8, 0x91, 0x3a, 0xa4, 0x19, 0x08, 0x35, 0x39, 0x5d, 0x43, 0x8e, 0x59,
	0xef, 0x58, 0xe9, 0x55, 0xac, 0x34, 0x78, 0xee, 0xb7, 0x78, 0x7e, 0x0c, 0x8e, 0xc4, 0x54, 0x3d,
	0x0b, 0x43, 0xe1, 0x9d, 0xe4, 0xb9, 0x32, 0x76, 0x3d, 0x38, 0x49, 0x64, 0x74, 0xb3, 0x5d, 0xa3,
	0xe7, 0x98, 0xea, 0xca, 0xb0, 0xcc, 0xb0, 0x04, 0xbd, 0x41, 0x95, 0x61, 0x09, 0xba, 0x5f, 0x80,
	0xa3, 0x09, 0xd2, 0xdc, 0x7b, 0x30, 0xb4, 0x46, 0xa7, 0x13, 0x6f, 0x5c, 0x9a, 0x64, 0xdc, 0xd4,
	0x86, 0xec, 0xbe, 0xf4, 0x7f, 0xb1, 0xe0, 0xb2, 0xc1, 0x9f, 0x5c, 0xf3, 0x54, 0xe2, 0x74, 0x32,
	0xd7, 0x47, 0xc9, 0x2c, 0x08, 0x50, 0x4a, 0xc3, 0x9f, 0x43, 0xca, 0x50, 0x67, 0x50, 0x88, 0x19,
	0x0f, 0xb1, 0x70, 0x4f, 0x19, 0xba, 0x97, 0xd0, 0x47, 0x21, 0x5e, 0xc9, 0xc8, 0xb0, 0x36, 0x20,
	0x45, 0xa4, 0x29, 0x15, 0xb8, 0xc9, 0x98, 0x40, 0x5d, 0x89, 0xe1, 0xcd, 0x21, 0x75, 0xc8, 0xff,
	0xab, 0x03, 0x2e, 0xc1, 0x88, 0x49, 0x85, 0xa2, 0x50, 0x71, 0x36, 0x99, 0xea, 0x0d, 0xf9, 0xda,
	0x10, 0x61, 0x99, 0x93, 0x8a, 0xa8, 0xa1, 0xae, 0xbd, 0xaf, 0x6e, 0x24, 0x78, 0xb6, 0x36, 0xea,
	0xe6, 0x75, 0x54, 0x40, 0x53, 0xfb, 0xee, 0x11, 0xed, 0x7b, 0xfb, 0xda, 0x7f, 0x0c, 0x20, 0x90,
	0x86, 0x0b, 0x45, 0x55, 0x26, 0x0b, 0x55, 0x6b, 0x88, 0xfb, 0x09, 0x3c, 0x58, 0xb2, 0x58, 0xa1,
	0x98, 0xf1, 0x34, 0x5c, 0x28, 0x2d, 0x6e, 0x67, 0x34, 0x20, 0x4d, 0x50, 0xef, 0x12, 0x64, 0x42,
	0x7c, 0xb7, 0x5c, 0x4a, 0x54, 0x46, 0xe4, 0x0e, 0xa9, 0x21, 0x3a, 0x2f, 0x51, 0x4a, 0xc6, 0xd3,
	0x6f, 0x70, 0x5b, 0x48, 0x5d, 0x43, 0x74, 0x9d, 0x45, 0x64, 0xbc, 0x00, 0x66, 0x83, 0x3a, 0x64,
	0x76, 0x90, 0xe1, 0x42, 0x71, 0xa1, 0x47, 0xc0, 0x69, 0x7e, 0x42, 0x85, 0xe8, 0x3a, 0x37, 0x62,
	0x3b, 0x17, 0x8c, 0x0b, 0xa6, 0xb6, 0xd7, 0xa1, 0x77, 0x66, 0x5a, 0x69, 0x82, 0x0d, 0x57, 0x3d,
	0xb8, 0xb7, 0xab, 0x7e, 0xb4, 0xe0, 0xbc, 0x12, 0xb3, 0xb4, 0xd4, 0xec, 0x3f, 0xb5, 0x54, 0x93,
	0xc1, 0x6e, 0x9b, 0x41, 0xff, 0x37, 0x1b, 0xce, 0xbf, 0x46, 0x2a, 0xd4, 0x14, 0xa9, 0xaa, 0x39,
	0xea, 0xc8, 0x5c, 0xa8, 0x9c, 0x63, 0xb7, 0x9d, 0xd3, 0x54, 0xbe, 0x73, 0x48, 0xf9, 0xca, 0x28,
	0x9a, 0xb0, 0x6e, 0xae, 0x7c, 0x03, 0x6c, 0xe9, 0xd2, 0x3b, 0xae, 0x4b, 0xff, 0x98, 0x2e, 0x27,
	0xf7, 0xd6, 0xe5, 0x6f, 0x0b, 0x2e, 0x6a, 0x9c, 0xbc, 0x1b, 0x61, 0x3e, 0x85, 0x87, 0x77, 0x54,
	0xce, 0xa9, 0x50, 0x2f, 0x28, 0x8b, 0x33, 0x81, 0xc5, 0x75, 0x6f, 0xa1, 0xda, 0xc2, 0xcb, 0x7c,
	0x69, 0xba, 0xe8, 0x19, 0xb2, 0xea, 0x50, 0x7b, 0x6a, 0xf4, 0xf7, 0xa7, 0xc6, 0xaf, 0x36, 0x5c,
	0x7c, 0x85, 0xaa, 0x39, 0xfd, 0x8f, 0xa9, 0xdc, 0xba, 0xe3, 0xf6, 0xfe, 0x1d, 0x7f, 0x9b, 0x09,
	0xf2, 0x19, 0xbc, 0x17, 0x53, 0xa9, 0xe6, 0x34, 0x58, 0xcd, 0x78, 0x2a, 0xb3, 0x04, 0x73, 0x95,
	0x1d, 0xb2, 0x87, 0xbb, 0x63, 0x70, 0x13, 0x9a, 0x66, 0x34, 0x9e, 0xf1, 0x24, 0x61, 0xaa, 0xf0,
	0x72, 0xde, 0xe7, 0x81, 0x8c, 0xae, 0x1c, 0x65, 0xf0, 0x22, 0xe6, 0x6f, 0x66, 0x4a, 0xc4, 0x46,
	0x78, 0x87, 0xd4, 0x21, 0xff, 0x4f, 0x1b, 0x1e, 0xd5, 0x09, 0x79, 0x37, 0x12, 0x7f, 0x09, 0x4e,
	0xf1, 0x98, 0x90, 0xc6, 0xe4, 0xa7, 0x93, 0x0f, 0x2b, 0xf7, 0xed, 0x3d, 0x46, 0xc8, 0xee, 0xe3,
	0xd6, 0xa5, 0xed, 0xed, 0x8d, 0x3d, 0x1f, 0xce, 0x12, 0x96, 0xbe, 0x64, 0x09, 0x53, 0x66, 0xae,
	0xe5, 0xde, 0x6f, 0x60, 0xc7, 0x49, 0xd0, 0x5f, 0xe8, 0x3d, 0xf5, 0x63, 0xe5, 0x79, 0x5c, 0x4e,
	0xd7, 0x3a, 0x54, 0x73, 0xd6, 0x22, 0xe6, 0x6f, 0xcc, 0x7c, 0xad, 0x9c, 0xa5, 0x21, 0xff, 0x0f,
	0x0b, 0x2e, 0xeb, 0xdc, 0xdf, 0x7f, 0x82, 0xbc, 0xd5, 0xcb, 0xa2, 0xe1, 0xbc, 0x6e, 0xdb, 0x79,
	0xff, 0xc2, 0x5b, 0xfe, 0xcf, 0x16, 0x7c, 0xd0, 0x6c, 0xe0, 0x7f, 0x99, 0xc3, 0xd3, 0xc9, 0xf7,
	0x4f, 0x23, 0xa6, 0xc6, 0x01, 0x0f, 0x71, 0xcc, 0xe9, 0x38, 0xe0, 0xc9, 0x95, 0x0a, 0x6f, 0x69,
	0xba, 0xba, 0x52, 0xd9, 0x2d, 0x26, 0x9b, 0x27, 0x39, 0x77, 0x4f, 0x22, 0x7e, 0x55, 0x5a, 0xe8,
	0xb6, 0x6f, 0x56, 0x9f, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x0a, 0x7f, 0x56, 0xf4, 0x0a,
	0x00, 0x00,
}
