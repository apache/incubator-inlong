<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.inlong.manager.dao.mapper.StorageHiveEntityMapper">
    <resultMap id="BaseResultMap" type="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="inlong_group_id" jdbcType="VARCHAR" property="inlongGroupId"/>
        <result column="inlong_stream_id" jdbcType="VARCHAR" property="inlongStreamId"/>
        <result column="enable_create_table" jdbcType="TINYINT" property="enableCreateTable"/>
        <result column="jdbc_url" jdbcType="VARCHAR" property="jdbcUrl"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="db_name" jdbcType="VARCHAR" property="dbName"/>
        <result column="table_name" jdbcType="VARCHAR" property="tableName"/>
        <result column="hdfs_default_fs" jdbcType="VARCHAR" property="hdfsDefaultFs"/>
        <result column="warehouse_dir" jdbcType="VARCHAR" property="warehouseDir"/>

        <result column="partition_interval" jdbcType="INTEGER" property="partitionInterval"/>
        <result column="partition_unit" jdbcType="VARCHAR" property="partitionUnit"/>
        <result column="primary_partition" jdbcType="VARCHAR" property="primaryPartition"/>
        <result column="secondary_partition" jdbcType="VARCHAR" property="secondaryPartition"/>
        <result column="partition_creation_strategy" jdbcType="VARCHAR" property="partitionCreationStrategy"/>

        <result column="file_format" jdbcType="VARCHAR" property="fileFormat"/>
        <result column="data_encoding" jdbcType="VARCHAR" property="dataEncoding"/>
        <result column="data_separator" jdbcType="VARCHAR" property="dataSeparator"/>
        <result column="storage_period" jdbcType="INTEGER" property="storagePeriod"/>
        <result column="opt_log" jdbcType="VARCHAR" property="optLog"/>

        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="previous_status" jdbcType="INTEGER" property="previousStatus"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, inlong_group_id, inlong_stream_id, enable_create_table, jdbc_url, username, password, db_name, table_name,
        hdfs_default_fs, warehouse_dir, partition_interval, partition_unit, primary_partition, secondary_partition,
        partition_creation_strategy, file_format, data_encoding, data_separator, storage_period,
        opt_log, status, previous_status, is_deleted, creator, modifier, create_time, modify_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from storage_hive
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByCondition" parameterType="org.apache.inlong.manager.common.pojo.datastorage.StoragePageRequest"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from storage_hive
        <where>
            is_deleted = 0
            <if test="request.inlongGroupId != null and request.inlongGroupId != ''">
                and inlong_group_id = #{request.inlongGroupId, jdbcType=VARCHAR}
            </if>
            <if test="request.inlongStreamId != null and request.inlongStreamId != ''">
                and inlong_stream_id = #{request.inlongStreamId, jdbcType=VARCHAR}
            </if>
            <if test="request.keyWord != null and request.keyWord != ''">
                and (
                inlong_group_id like CONCAT('%', #{request.keyWord}, '%')
                or inlong_stream_id like CONCAT('%', #{request.keyWord}, '%')
                )
            </if>
            <if test="request.status != null and request.status != ''">
                and status = #{request.status, jdbcType=INTEGER}
            </if>
            order by modify_time desc
        </where>
    </select>
    <select id="selectByIdentifier" resultType="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        select
        <include refid="Base_Column_List"/>
        from storage_hive
        <where>
            is_deleted = 0
            and inlong_group_id = #{groupId, jdbcType=VARCHAR}
            <if test="streamId != null and streamId != ''">
                and inlong_stream_id = #{streamId, jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="selectCountByIdentifier" resultType="java.lang.Integer">
        select count(1)
        from storage_hive
        <where>
            is_deleted = 0
            <if test="groupId != null and groupId != ''">
                and inlong_group_id = #{groupId, jdbcType=VARCHAR}
            </if>
            <if test="streamId != null and streamId != ''">
                and inlong_stream_id = #{streamId, jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="selectDataStreamExists" resultType="java.lang.String">
        select inlong_stream_id
        from storage_hive
        <where>
            <if test="groupId != null and groupId != ''">
                and inlong_group_id = #{groupId, jdbcType=VARCHAR}
            </if>
            and inlong_stream_id in
            <foreach collection="streamIdList" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
            and is_deleted = 0
        </where>
    </select>
    <select id="selectSummary" resultType="org.apache.inlong.manager.common.pojo.datastorage.StorageSummaryInfo">
        select s.id,
               s.inlong_group_id,
               s.inlong_stream_id,
               "HIVE" as storage_type
        from storage_hive s
        where s.is_deleted = 0
          and s.inlong_group_id = #{groupId, jdbcType=VARCHAR}
          and s.inlong_stream_id = #{streamId, jdbcType=VARCHAR}
    </select>
    <select id="selectAllHiveConfig" resultType="org.apache.inlong.manager.common.pojo.datastorage.StorageHiveDTO">
        select hive.id,
               hive.inlong_group_id,
               hive.inlong_stream_id,

               hive.jdbc_url,
               hive.username,
               hive.password,
               hive.db_name,
               hive.table_name,
               hive.hdfs_default_fs,
               hive.warehouse_dir,

               hive.partition_interval,
               hive.partition_unit,
               hive.primary_partition,
               hive.secondary_partition,
               hive.partition_creation_strategy,

               hive.file_format,
               hive.data_encoding,
               hive.data_separator   as targetSeparator,
               hive.status,
               hive.creator,

               stream.mq_resource_obj,
               stream.data_source_type,
               stream.data_type,
               stream.description,
               stream.data_separator as sourceSeparator,
               stream.data_escape_char
        from data_stream stream,
             storage_hive hive
        <where>
            stream.is_deleted = 0
            and hive.is_deleted = 0
            and stream.inlong_group_id = hive.inlong_group_id
            and stream.inlong_stream_id = hive.inlong_stream_id
            and stream.inlong_group_id = #{groupId, jdbcType=VARCHAR}
            <if test="streamId != null and streamId != ''">
                and stream.inlong_stream_id = #{streamId, jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from storage_hive
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        insert into storage_hive (id, inlong_group_id,
                                  inlong_stream_id, enable_create_table,
                                  jdbc_url, username, password,
                                  db_name, table_name, hdfs_default_fs,
                                  warehouse_dir, partition_interval,
                                  partition_unit, primary_partition,
                                  secondary_partition, partition_creation_strategy,
                                  file_format, data_encoding, data_separator,
                                  storage_period, opt_log, status,
                                  previous_status, is_deleted, creator,
                                  modifier, create_time, modify_time)
        values (#{id,jdbcType=INTEGER}, #{inlongGroupId,jdbcType=VARCHAR},
                #{inlongStreamId,jdbcType=VARCHAR}, #{enableCreateTable,jdbcType=TINYINT},
                #{jdbcUrl,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{dbName,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{hdfsDefaultFs,jdbcType=VARCHAR},
                #{warehouseDir,jdbcType=VARCHAR}, #{partitionInterval,jdbcType=INTEGER},
                #{partitionUnit,jdbcType=VARCHAR}, #{primaryPartition,jdbcType=VARCHAR},
                #{secondaryPartition,jdbcType=VARCHAR}, #{partitionCreationStrategy,jdbcType=VARCHAR},
                #{fileFormat,jdbcType=VARCHAR}, #{dataEncoding,jdbcType=VARCHAR}, #{dataSeparator,jdbcType=VARCHAR},
                #{storagePeriod,jdbcType=INTEGER}, #{optLog,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
                #{previousStatus,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR},
                #{modifier,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        insert into storage_hive
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="inlongGroupId != null">
                inlong_group_id,
            </if>
            <if test="inlongStreamId != null">
                inlong_stream_id,
            </if>
            <if test="enableCreateTable != null">
                enable_create_table,
            </if>
            <if test="jdbcUrl != null">
                jdbc_url,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="dbName != null">
                db_name,
            </if>
            <if test="tableName != null">
                table_name,
            </if>
            <if test="hdfsDefaultFs != null">
                hdfs_default_fs,
            </if>
            <if test="warehouseDir != null">
                warehouse_dir,
            </if>
            <if test="partitionInterval != null">
                partition_interval,
            </if>
            <if test="partitionUnit != null">
                partition_unit,
            </if>
            <if test="primaryPartition != null">
                primary_partition,
            </if>
            <if test="secondaryPartition != null">
                secondary_partition,
            </if>
            <if test="partitionCreationStrategy != null">
                partition_creation_strategy,
            </if>
            <if test="fileFormat != null">
                file_format,
            </if>
            <if test="dataEncoding != null">
                data_encoding,
            </if>
            <if test="dataSeparator != null">
                data_separator,
            </if>
            <if test="storagePeriod != null">
                storage_period,
            </if>
            <if test="optLog != null">
                opt_log,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="previousStatus != null">
                previous_status,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="inlongGroupId != null">
                #{inlongGroupId,jdbcType=VARCHAR},
            </if>
            <if test="inlongStreamId != null">
                #{inlongStreamId,jdbcType=VARCHAR},
            </if>
            <if test="enableCreateTable != null">
                #{enableCreateTable,jdbcType=TINYINT},
            </if>
            <if test="jdbcUrl != null">
                #{jdbcUrl,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="dbName != null">
                #{dbName,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="hdfsDefaultFs != null">
                #{hdfsDefaultFs,jdbcType=VARCHAR},
            </if>
            <if test="warehouseDir != null">
                #{warehouseDir,jdbcType=VARCHAR},
            </if>
            <if test="partitionInterval != null">
                #{partitionInterval,jdbcType=INTEGER},
            </if>
            <if test="partitionUnit != null">
                #{partitionUnit,jdbcType=VARCHAR},
            </if>
            <if test="primaryPartition != null">
                #{primaryPartition,jdbcType=VARCHAR},
            </if>
            <if test="secondaryPartition != null">
                #{secondaryPartition,jdbcType=VARCHAR},
            </if>
            <if test="partitionCreationStrategy != null">
                #{partitionCreationStrategy,jdbcType=VARCHAR},
            </if>
            <if test="fileFormat != null">
                #{fileFormat,jdbcType=VARCHAR},
            </if>
            <if test="dataEncoding != null">
                #{dataEncoding,jdbcType=VARCHAR},
            </if>
            <if test="dataSeparator != null">
                #{dataSeparator,jdbcType=VARCHAR},
            </if>
            <if test="storagePeriod != null">
                #{storagePeriod,jdbcType=INTEGER},
            </if>
            <if test="optLog != null">
                #{optLog,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="previousStatus != null">
                #{previousStatus,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        update storage_hive
        <set>
            <if test="inlongGroupId != null">
                inlong_group_id = #{inlongGroupId,jdbcType=VARCHAR},
            </if>
            <if test="inlongStreamId != null">
                inlong_stream_id = #{inlongStreamId,jdbcType=VARCHAR},
            </if>
            <if test="enableCreateTable != null">
                enable_create_table = #{enableCreateTable,jdbcType=TINYINT},
            </if>
            <if test="jdbcUrl != null">
                jdbc_url = #{jdbcUrl,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="dbName != null">
                db_name = #{dbName,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="hdfsDefaultFs != null">
                hdfs_default_fs = #{hdfsDefaultFs,jdbcType=VARCHAR},
            </if>
            <if test="warehouseDir != null">
                warehouse_dir = #{warehouseDir,jdbcType=VARCHAR},
            </if>
            <if test="partitionInterval != null">
                partition_interval = #{partitionInterval,jdbcType=INTEGER},
            </if>
            <if test="partitionUnit != null">
                partition_unit = #{partitionUnit,jdbcType=VARCHAR},
            </if>
            <if test="primaryPartition != null">
                primary_partition = #{primaryPartition,jdbcType=VARCHAR},
            </if>
            <if test="secondaryPartition != null">
                secondary_partition = #{secondaryPartition,jdbcType=VARCHAR},
            </if>
            <if test="partitionCreationStrategy != null">
                partition_creation_strategy = #{partitionCreationStrategy,jdbcType=VARCHAR},
            </if>
            <if test="fileFormat != null">
                file_format = #{fileFormat,jdbcType=VARCHAR},
            </if>
            <if test="dataEncoding != null">
                data_encoding = #{dataEncoding,jdbcType=VARCHAR},
            </if>
            <if test="dataSeparator != null">
                data_separator = #{dataSeparator,jdbcType=VARCHAR},
            </if>
            <if test="storagePeriod != null">
                storage_period = #{storagePeriod,jdbcType=INTEGER},
            </if>
            <if test="optLog != null">
                opt_log = #{optLog,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="previousStatus != null">
                previous_status = #{previousStatus,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        update storage_hive
        set inlong_group_id             = #{inlongGroupId,jdbcType=VARCHAR},
            inlong_stream_id            = #{inlongStreamId,jdbcType=VARCHAR},
            enable_create_table         = #{enableCreateTable,jdbcType=TINYINT},
            jdbc_url                    = #{jdbcUrl,jdbcType=VARCHAR},
            username                    = #{username,jdbcType=VARCHAR},
            password                    = #{password,jdbcType=VARCHAR},
            db_name                     = #{dbName,jdbcType=VARCHAR},
            table_name                  = #{tableName,jdbcType=VARCHAR},
            hdfs_default_fs             = #{hdfsDefaultFs,jdbcType=VARCHAR},
            warehouse_dir               = #{warehouseDir,jdbcType=VARCHAR},
            partition_interval          = #{partitionInterval,jdbcType=INTEGER},
            partition_unit              = #{partitionUnit,jdbcType=VARCHAR},
            primary_partition           = #{primaryPartition,jdbcType=VARCHAR},
            secondary_partition         = #{secondaryPartition,jdbcType=VARCHAR},
            partition_creation_strategy = #{partitionCreationStrategy,jdbcType=VARCHAR},
            file_format                 = #{fileFormat,jdbcType=VARCHAR},
            data_encoding               = #{dataEncoding,jdbcType=VARCHAR},
            data_separator              = #{dataSeparator,jdbcType=VARCHAR},
            storage_period              = #{storagePeriod,jdbcType=INTEGER},
            opt_log                     = #{optLog,jdbcType=VARCHAR},
            status                      = #{status,jdbcType=INTEGER},
            previous_status             = #{previousStatus,jdbcType=INTEGER},
            is_deleted                  = #{isDeleted,jdbcType=INTEGER},
            creator                     = #{creator,jdbcType=VARCHAR},
            modifier                    = #{modifier,jdbcType=VARCHAR},
            create_time                 = #{createTime,jdbcType=TIMESTAMP},
            modify_time                 = #{modifyTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateStorageStatusById" parameterType="org.apache.inlong.manager.dao.entity.StorageHiveEntity">
        update storage_hive
        set status          = #{status,jdbcType=INTEGER},
            previous_status = status,
            opt_log         = #{optLog,jdbcType=VARCHAR},
            modify_time     = now()
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>