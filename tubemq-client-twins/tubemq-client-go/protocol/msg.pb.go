/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/msg.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_SUCCESS Status = 0
	Status_ERROR   Status = 1
	Status_FATAL   Status = 2
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
	2: "FATAL",
}

var Status_value = map[string]int32{
	"SUCCESS": 0,
	"ERROR":   1,
	"FATAL":   2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{0}
}

type FrameHeader struct {
	Flag                 int32    `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
	TraceId              int64    `protobuf:"varint,2,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SpanId               int64    `protobuf:"varint,3,opt,name=spanId,proto3" json:"spanId,omitempty"`
	ParentId             int64    `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrameHeader) Reset()         { *m = FrameHeader{} }
func (m *FrameHeader) String() string { return proto.CompactTextString(m) }
func (*FrameHeader) ProtoMessage()    {}
func (*FrameHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{0}
}

func (m *FrameHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrameHeader.Unmarshal(m, b)
}
func (m *FrameHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrameHeader.Marshal(b, m, deterministic)
}
func (m *FrameHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrameHeader.Merge(m, src)
}
func (m *FrameHeader) XXX_Size() int {
	return xxx_messageInfo_FrameHeader.Size(m)
}
func (m *FrameHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_FrameHeader.DiscardUnknown(m)
}

var xxx_messageInfo_FrameHeader proto.InternalMessageInfo

func (m *FrameHeader) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *FrameHeader) GetTraceId() int64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *FrameHeader) GetSpanId() int64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *FrameHeader) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

type RequestHeader struct {
	ServiceType          int32    `protobuf:"varint,1,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	ProtocolVer          int32    `protobuf:"varint,2,opt,name=protocolVer,proto3" json:"protocolVer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestHeader) Reset()         { *m = RequestHeader{} }
func (m *RequestHeader) String() string { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()    {}
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{1}
}

func (m *RequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeader.Unmarshal(m, b)
}
func (m *RequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeader.Marshal(b, m, deterministic)
}
func (m *RequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeader.Merge(m, src)
}
func (m *RequestHeader) XXX_Size() int {
	return xxx_messageInfo_RequestHeader.Size(m)
}
func (m *RequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeader proto.InternalMessageInfo

func (m *RequestHeader) GetServiceType() int32 {
	if m != nil {
		return m.ServiceType
	}
	return 0
}

func (m *RequestHeader) GetProtocolVer() int32 {
	if m != nil {
		return m.ProtocolVer
	}
	return 0
}

type RequestBody struct {
	Method               int32    `protobuf:"varint,1,opt,name=method,proto3" json:"method,omitempty"`
	Timeout              int64    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestBody) Reset()         { *m = RequestBody{} }
func (m *RequestBody) String() string { return proto.CompactTextString(m) }
func (*RequestBody) ProtoMessage()    {}
func (*RequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{2}
}

func (m *RequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBody.Unmarshal(m, b)
}
func (m *RequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBody.Marshal(b, m, deterministic)
}
func (m *RequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBody.Merge(m, src)
}
func (m *RequestBody) XXX_Size() int {
	return xxx_messageInfo_RequestBody.Size(m)
}
func (m *RequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBody proto.InternalMessageInfo

func (m *RequestBody) GetMethod() int32 {
	if m != nil {
		return m.Method
	}
	return 0
}

func (m *RequestBody) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RequestBody) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ResponseHeader struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=protocol.Status" json:"status,omitempty"`
	ServiceType          int32    `protobuf:"varint,2,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	ProtocolVer          int32    `protobuf:"varint,3,opt,name=protocolVer,proto3" json:"protocolVer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseHeader) Reset()         { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()    {}
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{3}
}

func (m *ResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseHeader.Unmarshal(m, b)
}
func (m *ResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseHeader.Marshal(b, m, deterministic)
}
func (m *ResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseHeader.Merge(m, src)
}
func (m *ResponseHeader) XXX_Size() int {
	return xxx_messageInfo_ResponseHeader.Size(m)
}
func (m *ResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseHeader proto.InternalMessageInfo

func (m *ResponseHeader) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *ResponseHeader) GetServiceType() int32 {
	if m != nil {
		return m.ServiceType
	}
	return 0
}

func (m *ResponseHeader) GetProtocolVer() int32 {
	if m != nil {
		return m.ProtocolVer
	}
	return 0
}

type RspExceptionBody struct {
	ExceptionName        string   `protobuf:"bytes,1,opt,name=exceptionName,proto3" json:"exceptionName,omitempty"`
	StackTrace           string   `protobuf:"bytes,2,opt,name=stackTrace,proto3" json:"stackTrace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspExceptionBody) Reset()         { *m = RspExceptionBody{} }
func (m *RspExceptionBody) String() string { return proto.CompactTextString(m) }
func (*RspExceptionBody) ProtoMessage()    {}
func (*RspExceptionBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{4}
}

func (m *RspExceptionBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspExceptionBody.Unmarshal(m, b)
}
func (m *RspExceptionBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspExceptionBody.Marshal(b, m, deterministic)
}
func (m *RspExceptionBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspExceptionBody.Merge(m, src)
}
func (m *RspExceptionBody) XXX_Size() int {
	return xxx_messageInfo_RspExceptionBody.Size(m)
}
func (m *RspExceptionBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RspExceptionBody.DiscardUnknown(m)
}

var xxx_messageInfo_RspExceptionBody proto.InternalMessageInfo

func (m *RspExceptionBody) GetExceptionName() string {
	if m != nil {
		return m.ExceptionName
	}
	return ""
}

func (m *RspExceptionBody) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

type RspResponseBody struct {
	Method               int32    `protobuf:"varint,1,opt,name=method,proto3" json:"method,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspResponseBody) Reset()         { *m = RspResponseBody{} }
func (m *RspResponseBody) String() string { return proto.CompactTextString(m) }
func (*RspResponseBody) ProtoMessage()    {}
func (*RspResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c4aad43ef7e1fe, []int{5}
}

func (m *RspResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspResponseBody.Unmarshal(m, b)
}
func (m *RspResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspResponseBody.Marshal(b, m, deterministic)
}
func (m *RspResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspResponseBody.Merge(m, src)
}
func (m *RspResponseBody) XXX_Size() int {
	return xxx_messageInfo_RspResponseBody.Size(m)
}
func (m *RspResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RspResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_RspResponseBody proto.InternalMessageInfo

func (m *RspResponseBody) GetMethod() int32 {
	if m != nil {
		return m.Method
	}
	return 0
}

func (m *RspResponseBody) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.Status", Status_name, Status_value)
	proto.RegisterType((*FrameHeader)(nil), "protocol.FrameHeader")
	proto.RegisterType((*RequestHeader)(nil), "protocol.RequestHeader")
	proto.RegisterType((*RequestBody)(nil), "protocol.RequestBody")
	proto.RegisterType((*ResponseHeader)(nil), "protocol.ResponseHeader")
	proto.RegisterType((*RspExceptionBody)(nil), "protocol.RspExceptionBody")
	proto.RegisterType((*RspResponseBody)(nil), "protocol.RspResponseBody")
}

func init() { proto.RegisterFile("protocol/msg.proto", fileDescriptor_c8c4aad43ef7e1fe) }

var fileDescriptor_c8c4aad43ef7e1fe = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x41, 0x8f, 0xd3, 0x30,
	0x10, 0x85, 0x49, 0xba, 0xcd, 0x6e, 0x27, 0xec, 0x12, 0xf9, 0x80, 0x22, 0x0e, 0xa8, 0x8a, 0x38,
	0x54, 0xa0, 0x4d, 0xd0, 0xf2, 0x0b, 0x76, 0xab, 0xae, 0xa8, 0x84, 0x40, 0x72, 0x0a, 0x02, 0x6e,
	0xae, 0x3d, 0x84, 0x68, 0x93, 0xd8, 0x1b, 0x3b, 0x88, 0x5e, 0xf8, 0xed, 0x28, 0x4e, 0x5c, 0xb5,
	0x70, 0xe8, 0x6d, 0xde, 0x1b, 0x6b, 0x66, 0xbe, 0x67, 0x20, 0xaa, 0x95, 0x46, 0x72, 0x59, 0x65,
	0xb5, 0x2e, 0x52, 0x2b, 0xc8, 0x85, 0xf3, 0x12, 0x09, 0xe1, 0x7d, 0xcb, 0x6a, 0x7c, 0x8f, 0x4c,
	0x60, 0x4b, 0x08, 0x9c, 0xfd, 0xa8, 0x58, 0x11, 0x7b, 0x73, 0x6f, 0x31, 0xa5, 0xb6, 0x26, 0x31,
	0x9c, 0x9b, 0x96, 0x71, 0x5c, 0x8b, 0xd8, 0x9f, 0x7b, 0x8b, 0x09, 0x75, 0x92, 0x3c, 0x87, 0x40,
	0x2b, 0xd6, 0xac, 0x45, 0x3c, 0xb1, 0x8d, 0x51, 0x91, 0x17, 0x70, 0xa1, 0x58, 0x8b, 0x8d, 0x59,
	0x8b, 0xf8, 0xcc, 0x76, 0xf6, 0x3a, 0xc9, 0xe1, 0x92, 0xe2, 0x63, 0x87, 0xda, 0x8c, 0x2b, 0xe7,
	0x10, 0x6a, 0x6c, 0x7f, 0x95, 0x1c, 0x37, 0x3b, 0x85, 0xe3, 0xe6, 0x43, 0xab, 0x7f, 0xe1, 0xee,
	0xfd, 0x82, 0xad, 0x3d, 0x62, 0x4a, 0x0f, 0xad, 0xe4, 0x1b, 0x84, 0xe3, 0xd0, 0x3b, 0x29, 0x76,
	0xfd, 0x5d, 0x35, 0x9a, 0x9f, 0x52, 0x8c, 0xd3, 0x46, 0x65, 0x49, 0xca, 0x1a, 0x65, 0x67, 0xf6,
	0x24, 0x83, 0xec, 0x3b, 0x8a, 0xed, 0x2a, 0xc9, 0x06, 0x94, 0xa7, 0xd4, 0xc9, 0xe4, 0x0f, 0x5c,
	0x51, 0xd4, 0x4a, 0x36, 0xda, 0x65, 0xb4, 0x80, 0x40, 0x1b, 0x66, 0x3a, 0x6d, 0xa7, 0x5f, 0xdd,
	0x44, 0xa9, 0x3b, 0x25, 0xcd, 0xad, 0x4f, 0xc7, 0xfe, 0xbf, 0x68, 0xfe, 0x49, 0xb4, 0xc9, 0xff,
	0x68, 0x5f, 0x21, 0xa2, 0x5a, 0xad, 0x7e, 0x73, 0x54, 0xa6, 0x94, 0x8d, 0xe5, 0x7b, 0x05, 0x97,
	0xe8, 0x8c, 0x8f, 0xac, 0x1e, 0x42, 0x9b, 0xd1, 0x63, 0x93, 0xbc, 0x04, 0xd0, 0x86, 0xf1, 0x87,
	0x4d, 0xff, 0x5b, 0x76, 0xf9, 0x8c, 0x1e, 0x38, 0xc9, 0x12, 0x9e, 0x51, 0xad, 0x1c, 0xdc, 0xa9,
	0xe0, 0x5c, 0x3c, 0xfe, 0x51, 0x3c, 0xaf, 0xdf, 0x40, 0x30, 0x40, 0x93, 0x10, 0xce, 0xf3, 0xcf,
	0xcb, 0xe5, 0x2a, 0xcf, 0xa3, 0x27, 0x64, 0x06, 0xd3, 0x15, 0xa5, 0x9f, 0x68, 0xe4, 0xf5, 0xe5,
	0xfd, 0xed, 0xe6, 0xf6, 0x43, 0xe4, 0xdf, 0xdd, 0x7c, 0x7f, 0x5b, 0x94, 0x26, 0xe5, 0x52, 0x60,
	0x2a, 0x59, 0xca, 0x65, 0x9d, 0x19, 0xb1, 0x65, 0xcd, 0x43, 0x66, 0xba, 0x2d, 0xd6, 0x8f, 0xd7,
	0xbc, 0x2a, 0xb1, 0x31, 0xd7, 0x85, 0xcc, 0x5c, 0x04, 0xdb, 0xc0, 0x56, 0xef, 0xfe, 0x06, 0x00,
	0x00, 0xff, 0xff, 0xdd, 0xb8, 0x10, 0x54, 0xc7, 0x02, 0x00, 0x00,
}
