<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements. See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ <p>
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~ <p>
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.inlong.manager.dao.mapper.StorageHiveFieldEntityMapper">
    <resultMap id="BaseResultMap" type="org.apache.inlong.manager.dao.entity.StorageHiveFieldEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="storage_id" jdbcType="VARCHAR" property="storageId"/>
        <result column="field_name" jdbcType="VARCHAR" property="fieldName"/>
        <result column="field_type" jdbcType="VARCHAR" property="fieldType"/>
        <result column="field_comment" jdbcType="VARCHAR" property="fieldComment"/>
        <result column="is_required" jdbcType="INTEGER" property="isRequired"/>
        <result column="source_field_name" jdbcType="VARCHAR" property="sourceFieldName"/>
        <result column="source_field_type" jdbcType="VARCHAR" property="sourceFieldType"/>
        <result column="rank_num" jdbcType="SMALLINT" property="rankNum"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, storage_id, field_name, field_type, field_comment, is_required,
        source_field_name, source_field_type, rank_num, is_deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from storage_hive_field
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByStorageId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from storage_hive_field
        where storage_id = #{storageId, jdbcType=INTEGER}
        and is_deleted = 0
        order by rank_num asc
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from storage_hive_field
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteAllByStorageId">
        delete
        from storage_hive_field
        where storage_id = #{storageId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="org.apache.inlong.manager.dao.entity.StorageHiveFieldEntity">
        insert into storage_hive_field (id, storage_id, field_name,
                                        field_type, field_comment, is_required,
                                        source_field_name, source_field_type,
                                        rank_num, is_deleted)
        values (#{id,jdbcType=INTEGER}, #{storageId,jdbcType=INTEGER}, #{fieldName,jdbcType=VARCHAR},
                #{fieldType,jdbcType=VARCHAR}, #{fieldComment,jdbcType=VARCHAR}, #{isRequired,jdbcType=INTEGER},
                #{sourceFieldName,jdbcType=VARCHAR}, #{sourceFieldType,jdbcType=VARCHAR},
                #{rankNum,jdbcType=SMALLINT}, #{isDeleted,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="org.apache.inlong.manager.dao.entity.StorageHiveFieldEntity">
        insert into storage_hive_field
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="storageId != null">
                storage_id,
            </if>
            <if test="fieldName != null">
                field_name,
            </if>
            <if test="fieldType != null">
                field_type,
            </if>
            <if test="fieldComment != null">
                field_comment,
            </if>
            <if test="isRequired != null">
                is_required,
            </if>
            <if test="sourceFieldName != null">
                source_field_name,
            </if>
            <if test="sourceFieldType != null">
                source_field_type,
            </if>
            <if test="rankNum != null">
                rank_num,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="storageId != null">
                #{storageId,jdbcType=INTEGER},
            </if>
            <if test="fieldName != null">
                #{fieldName,jdbcType=VARCHAR},
            </if>
            <if test="fieldType != null">
                #{fieldType,jdbcType=VARCHAR},
            </if>
            <if test="fieldComment != null">
                #{fieldComment,jdbcType=VARCHAR},
            </if>
            <if test="isRequired != null">
                #{isRequired,jdbcType=INTEGER},
            </if>
            <if test="sourceFieldName != null">
                #{sourceFieldName,jdbcType=VARCHAR},
            </if>
            <if test="sourceFieldType != null">
                #{sourceFieldType,jdbcType=VARCHAR},
            </if>
            <if test="rankNum != null">
                #{rankNum,jdbcType=SMALLINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="org.apache.inlong.manager.dao.entity.StorageHiveFieldEntity">
        update storage_hive_field
        <set>
            <if test="storageId != null">
                storage_id = #{storageId,jdbcType=INTEGER},
            </if>
            <if test="fieldName != null">
                field_name = #{fieldName,jdbcType=VARCHAR},
            </if>
            <if test="fieldType != null">
                field_type = #{fieldType,jdbcType=VARCHAR},
            </if>
            <if test="fieldComment != null">
                field_comment = #{fieldComment,jdbcType=VARCHAR},
            </if>
            <if test="isRequired != null">
                is_required = #{isRequired,jdbcType=INTEGER},
            </if>
            <if test="sourceFieldName != null">
                source_field_name = #{sourceFieldName,jdbcType=VARCHAR},
            </if>
            <if test="sourceFieldType != null">
                source_field_type = #{sourceFieldType,jdbcType=VARCHAR},
            </if>
            <if test="rankNum != null">
                rank_num = #{rankNum,jdbcType=SMALLINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.apache.inlong.manager.dao.entity.StorageHiveFieldEntity">
        update storage_hive_field
        set storage_id        = #{storageId,jdbcType=INTEGER},
            field_name        = #{fieldName,jdbcType=VARCHAR},
            field_type        = #{fieldType,jdbcType=VARCHAR},
            field_comment     = #{fieldComment,jdbcType=VARCHAR},
            is_required       = #{isRequired,jdbcType=INTEGER},
            source_field_name = #{sourceFieldName,jdbcType=VARCHAR},
            source_field_type = #{sourceFieldType,jdbcType=VARCHAR},
            rank_num          = #{rankNum,jdbcType=SMALLINT},
            is_deleted        = #{isDeleted,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="logicDeleteAll">
        update storage_hive_field
        set is_deleted = 1
        where storage_id = #{storageId, jdbcType=INTEGER}
          and is_deleted = 0
    </update>

    <select id="queryHiveFieldsByStreamId" resultMap="BaseResultMap">
        select f.*
        from storage_hive_field f,
             storage_hive s
        where s.business_identifier = #{bid, jdbcType=VARCHAR}
          and s.data_stream_identifier = #{dsid,jdbcType=VARCHAR}
          and f.storage_id = s.id
          and f.is_deleted = 0
          and s.is_deleted = 0
    </select>
</mapper>